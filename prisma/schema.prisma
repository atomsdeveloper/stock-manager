// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model UserManager {
  id         String   @id @default(cuid())
  name       String?
  email      String?  @unique
  password   String?
  created_at DateTime @default(now())
}

model User {
  id          String    @id @default(cuid())
  name        String?
  email       String?   @unique
  password    String?
  street      String
  city        String
  state       String
  postal_code Int
  country     String
  sessions    Session[]
  orders      Order[]
  created_at  DateTime
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  user_id      String
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  expires      DateTime
}

model Order {
  id             String         @id @default(uuid())
  user_id        String
  user           User           @relation(fields: [user_id], references: [id])
  products       OrderProduct[]
  subtotalPrice  Decimal        @db.Decimal(10, 2)
  totalPrice     Decimal        @db.Decimal(10, 2)
  totalDiscounts Decimal        @db.Decimal(10, 2)
  createdAt      DateTime       @default(now())
  status         OrderStatus
}

enum OrderStatus {
  CONFIRMED
  CANCELED
  PREPARING
  DELIVERING
  COMPLETED
}

model OrderProduct {
  id         String   @id @default(cuid())
  order_id   String
  order      Order    @relation(fields: [order_id], references: [id])
  product_id String
  product    Product  @relation(fields: [product_id], references: [id])
  quantity   Float
  created_at DateTime
}

model Payment {
  id             String   @id @default(cuid())
  payment_method String
  amount         Float
  created_at     DateTime
}

model Product {
  id                 String         @id @default(cuid())
  name               String
  image_url          String
  text               String
  discountPercentage Int            @default(0)
  category_id        String
  category           Category       @relation(fields: [category_id], references: [id])
  price              Float
  stock_quantity     Int
  created_at         DateTime
  OrderProduct       OrderProduct[]
}

model Category {
  id         String    @id @default(cuid())
  name       String
  image_url  String
  Products   Product[]
  created_at DateTime
}
